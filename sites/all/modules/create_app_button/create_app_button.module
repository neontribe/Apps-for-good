<?php

/*
 * Implementation of hook_menu
 *
 * Registers options block
 */
function create_app_button_block($op = 'list', $delta = 0, $edit = array()) {
	if($op == 'list') {
		$blocks[0] = array(
			'info' => t('Create Application Block'),
			'weight' => 0,
			'status' => 1,
			'region' => 'palette'
		);
		return $blocks;
	} else if($op == 'view') {
		switch($delta) {
			case 0:
				$block = array(
					'subject' => t('Create Application'),
					'content' => drupal_get_form('create_app_button_form')
				);
				break;
		}
		return $block;
	}
}

/*
 * Create app form
 */
function create_app_button_form(&$form_state) {
	$form = array();
	$form['appName'] = array(
		'#type' => 'textfield',
		'#title' => t('Application name'),
		'#default_value' => '',
		'#required' => TRUE
	);
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Submit'),
	);	
	return $form;
}

/*
 * Create app form submit handler
 */
function create_app_button_form_submit($form, &$form_state) {
	$space = spaces_get_space();
	$group = $space->group->nid;
	create_app_button_callback($group, $form['appName']['#value']);
}

/*
 * Implementation of hook_context_links_alter
 * 
 * Adds an entry to the context links menu
 */
function create_app_button_context_links_alter(&$links) {
	$space = spaces_get_space();
	global $user;
	if($space->group->type == 'group_centre_school' && $user->uid) {
		$links['create-app-button'] = array(
	                'title' => t('Create Application'),
	                'href' => "create_app_button",
	                'fragment' => 'block-create_app_button-0',
	                'attributes' => array(
	                        'class' => 'palette-toggle'
                	)
        	);
	}
}

/*
 * Create the child group
 */
function create_app_button_callback($parentNid, $appName) {
	global $user;
	$parentGroup = node_load($parentNid);
	if(!og_is_group_admin($parentGroup)) { //is the current user admin on the parent group?
                drupal_set_message('You need to be the administrator of the group to add an app to it.', 'error');
		return;
        }
	if(node_load(array('title' => $appName, 'type' => 'group')) != FALSE) { //does the group already exist?
                drupal_set_message('The ' . $appName . ' group already exists.', 'error');
		return;
        }
	$appGroup = new stdClass(); //create the child group
        $appGroup->type = 'group_app_team';
        $appGroup->title = $appName;
        $appGroup->uid = $user->uid;
        $appGroup->name = $user->name;
        $appGroup->purl = array('value' => $appName);
        $appGroup->og_description = $appName;
        $appGroup->og_register = $parentGroup->og_register;
        $appGroup->og_directory = $parentGroup->og_directory;
        $appGroup->og_selective = $parentGroup->og_selective;
        $appGroup->og_private = $parentGroup->og_private;
        $appGroup = node_submit($appGroup);
	node_save($appGroup);
	drupal_set_message($appName . ' Group was created.'); //redirect to new group dashboard
        return drupal_goto("../$appName");
}
