<?php

/*count funtions*/

function afg_user_count() {
  $count_users = db_result(db_query("SELECT COUNT(uid) FROM {users}"));
  return $count_users;
}

function afg_content_count($type) {
  $count_content = db_result(db_query("SELECT COUNT(*) FROM {node} WHERE type = '%s' AND status = 1", $type));
  return $count_content;
}

/**Shoutbox comment form**/
function afg_shoutbox_comment_form() {
  global $user;
  
  if ($user->uid) {
	$shoutbox = atrium_shoutbox_get_shoutbox();
	$view = views_get_view('shoutbox_shouts');
	$rendered = $view->execute_display('comment_block');
	return drupal_get_form('atrium_shoutbox_shoutform', $shoutbox['node'], $view, $rendered);
  }
  else {
    // Show anonymous users a login link. 
    $message = 'Please ' . l('login', 'user') .' to post a comment';
    print t($message);
  }
}

/**User profile image**/
function get_profile_image() {
	global $user;
  	$block = array();
    
    if ($user->uid) {
		return theme('user_picture', $user);
    }
}

/**User profile name**/
function get_user_name() {
	global $user;
	return check_plain($user->name);
}

function _set_form_field_globals(&$form) {
	$form['taxonomy']['#collapsible'] = FALSE;
	$form['taxonomy']['#collapsed'] = FALSE;
	
	$form['comment_settings']['#collapsible'] = FALSE;
	$form['comment_settings']['#collapsed'] = FALSE;
	
	$form['path']['#collapsible'] = FALSE;
	$form['path']['#collapsed'] = FALSE;
	
	$form['menu']['#collapsible'] = FALSE;
	$form['menu']['#collapsed'] = FALSE;
	
	$form['og_register']['#collapsible'] = FALSE;
	$form['og_register']['#collapsed'] = FALSE;
	
	$form['notifications']['#collapsible'] = FALSE;
	$form['notifications']['#collapsed'] = FALSE;
	
	$tax = $form['taxonomy'];
	$tax['#title'] = t('Add a tag?');
	
	//NOTE: The following is getting overriden at a later date
	if (isset($tax)) {
		foreach ($tax as $key => $value) {
			if (is_array($value)) {
				
				$title = $value['#title'];
				
				switch ($title)
				{
					case 'App Status':
						$title = t('Add an app status?');
						break;
					
					case 'Badges':
						$title = t('Add a badge?');
						break;
					
					default:
						$title = t('Add ' + strtolower($title) + '?');
						break;
				}
				
				$value['#title'] = $title;
				$value['#collapsible'] = FALSE;
				$value['#collapsed'] = FALSE;
				
				$form['taxonomy'][$key] = $value;
			}
		}
	}
	
	unset($form['spaces']);
	unset($form['buttons']['preview']);
	unset($form['attachments']['#description']);
}

function afg_theme_updates_form_alter(&$form, &$form_state, $form_id) {
	_set_form_field_globals($form);
	switch ($form_id) {
		//case 'page_node_form':
		//case 'blog_node_form':
		//case 'request_for_help_node_form':
		//case 'group_media_video_node_form':
		//default:
			//dpm($form, 'form');
			//break;
	}
}

function _override_form_settings(&$form, $title = '') {
	// Set page title
	//if (strlen($title)) {
		//drupal_set_title($title);
	//}
}