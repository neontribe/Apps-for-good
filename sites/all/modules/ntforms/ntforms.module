<?php
define('_GROUP_APP_TEAM_BODY_TITLE', 'Short Pitch');
define('_GROUP_APP_TEAM_DESCRIPTION', 'Who we are');
define('_GROUP_APP_TEAM_DESCRIPTION_HINT', 'Describe your organisation');

define('_GROUP_CENTRE_SCHOOL_BODY_TITLE', 'About this centre');
define('_GROUP_CENTRE_SCHOOL_DESCRIPTION', 'Description');
define('_GROUP_CENTRE_SCHOOL_DESCRIPTION_HINT', 'Description of group');

function ntforms_init() {
  $wt = db_result(
    db_query(
      'SELECT weight from {system} WHERE name = "ntforms"'
    )
  );
  if ($wt < 99999) {
    db_query(
      'UPDATE {system} SET weight = 99999 WHERE name = "ntforms"'
    );
  }
}

function ntforms_form_alter(&$form, &$form_state, $form_id) {
  // Push a validator infront of the default node validater
  // array_unshift($form['#validate'], 'ntforms_pul_validate');
  // dpm($form['#validate']);
  // dpm($form['purl']);

  $forms = array(
    'group_app_team_node_form' => array(
      'body_title' => _GROUP_APP_TEAM_BODY_TITLE, 
      'description' => _GROUP_APP_TEAM_DESCRIPTION,
      'description_hint' => _GROUP_APP_TEAM_DESCRIPTION_HINT,
      'space' => 'application_team',
    ),
    'group_centre_school_node_form' => array(
      'body_title' => _GROUP_CENTRE_SCHOOL_BODY_TITLE,
      'description' => NULL,
      'description_hint' => NULL,
      'space' => 'centre_school',
    ),
  );

  if (in_array($form_id, array_keys($forms))) {
    // Rewrite the body field title
    $form['body_field']['body']['#title'] = $forms[$form_id]['body_title'];

    // Rewrite description field
    //$form['og_description']['#title']
     // = $forms[$form_id]['description'];
    //$form['og_description']['#description']
     // = $forms[$form_id]['description_hint'];
	unset($form['og_description']);

    if (!isset($form['nid']['#value'])) {
      $path = drupal_get_path('module', 'ntforms') . '/ntforms.js';
      drupal_add_js($path);
    }

    // Preconfigure the group space
    $form['spaces_preset']['#type'] = 'hidden';
    $form['spaces_preset']['spaces_preset_og']['#disabled'] = TRUE;
    $form['spaces_preset']['spaces_preset_og']['#default_value'] = $forms[$form_id]['space'];

  }

  if ($form_id == 'ucreate_user_form') {
    //_ucreate_og_form($form);
		_ntforms_og_form($form);
  }
}

function ntforms_atrium_account_links_alter(&$links) {
  global $user;
  $uid = $user->uid;
  foreach ($links as $index => $link) {
	  if ($link['title'] == 'My dashboard' || $link['href'] == "user/$uid/dashboard" ||
	 	$link['title'] == 'Notifications' || $link['href'] == "user/$uid/notifications") {
      	unset($links[$index]);
    }
  }
}

/**
 * This function adds an OG group selection fieldset and provides default settings by user/group context.
 */
function _ntforms_og_form(&$form) {
  if (isset($_GET['gids'])) {
    og_set_group_context(node_load($_GET['gids'][0]));
  }
  $og = og_get_group_context();

  // Set up OG register checkboxes
  $form['og_register'] = array(
    '#type' => 'fieldset',
    '#title' => t('Groups'),
    'og_register' => array(
      '#type' => 'checkboxes',
    ),
  );

  // Allow user to add new user to her groups
  global $user;
	/*
  if (is_array($user->og_groups)) {
    $group_options = $user->og_groups;
  }
  else if ($og) {
    $group_options = array($og);
  }
	*/
	
	// Allow users to add other users to any group
	if (is_array($user->og_groups)) {
		$groups = array();
		$nodes = og_all_groups_options();

		foreach ($nodes as $key => $value) {
			$node = node_load($key);
			$groups[$key] = array(
				'nid' => $key,
				'title' => $node->title,
				'status' => $node->status,
				'type' => $node->type,
				'uid' => $node->uid,
				'created' => $node->created,
				'changed' => $node->changed,
			);
		}

		$group_options = $groups;
	}
	else if ($og) {
		$group_options = array($og);
	}

  $options = array();
  foreach ($group_options as $group) {
    $group = (object) $group;
    if ($group->status) {
      $options[$group->nid] = '<span class="og-registration-'. $group->nid .'">'. t('Subscribe to @name.', array('@name' => $group->title)) .'</span>';
      if ($group->selective) {
        $options[$group->nid] .= ' '. t('(approval needed)');
      }
    }
  }
  $form['og_register']['og_register']['#options'] = $options;
  // Completely disable OG options if there are no groups
  if (empty($options)) {
    unset($form['og_register']);
  }
  // Disable OG options (and select it) if only 1 group
  else if (count($options) == 1) {
    // We need to process this correctly (differently) on the hook_user() insert handler
    $form['og_register']['og_register']['#type'] = 'hidden';
    $form['og_register']['og_register']['#value'] = key($options);

    $form['og_register']['message']['#type'] = 'item';
    $group = array_shift($group_options);
    $form['og_register']['message']['#value'] = t('This user will be added to !group.', array('!group' => $group['title']));
  }
  // If group context is set, select it by default
  else if ($og) {
    $form['og_register']['og_register']['#default_value'] = array($og->nid);
  }
}

